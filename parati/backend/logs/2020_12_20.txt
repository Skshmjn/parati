2020-12-20 09:12:08,792,792 | Weather | ERROR | ----------------------------------------------------------------------------------------------------
2020-12-20 09:12:08,792,792 | Weather | ERROR | weather api : <class 'KeyError'> || viewsets.py || 29 || 'sadasdas'
2020-12-20 10:33:35,580,580 | Weather | ERROR | ----------------------------------------------------------------------------------------------------
2020-12-20 10:33:35,581,581 | Weather | ERROR | weather page: <class 'TypeError'> || views.py || 25 || the JSON object must be str, bytes or bytearray, not dict
2020-12-20 10:39:27,752,752 | Weather | ERROR | ----------------------------------------------------------------------------------------------------
2020-12-20 10:39:27,753,753 | Weather | ERROR | weather api : <class 'requests.exceptions.InvalidHeader'> || viewsets.py || 24 || Value for header {x-rapidapi-key: 0} must be of type str or bytes, not <class 'int'>
2020-12-20 10:39:53,453,453 | Weather | ERROR | ----------------------------------------------------------------------------------------------------
2020-12-20 10:39:53,453,453 | Weather | ERROR | weather api : <class 'requests.exceptions.InvalidHeader'> || viewsets.py || 24 || Invalid return character or leading space in header: x-rapidapi-key
2020-12-20 10:40:49,154,154 | Weather | ERROR | ----------------------------------------------------------------------------------------------------
2020-12-20 10:40:49,154,154 | Weather | ERROR | weather api : <class 'KeyError'> || viewsets.py || 24 || 'cod'
2020-12-20 10:44:45,189,189 | Weather | ERROR | ----------------------------------------------------------------------------------------------------
2020-12-20 10:44:45,189,189 | Weather | ERROR | weather api : <class 'TypeError'> || viewsets.py || 24 || request_open_api() missing 1 required positional argument: 'logger'
2020-12-20 10:45:10,158,158 | Weather | ERROR | ----------------------------------------------------------------------------------------------------
2020-12-20 10:45:10,159,159 | Weather | ERROR | weather api utils : <class 'KeyError'> || utils.py || 26 || 'cod'
2020-12-20 10:45:10,159,159 | Weather | ERROR | ----------------------------------------------------------------------------------------------------
2020-12-20 10:45:10,159,159 | Weather | ERROR | weather api : <class 'KeyError'> || viewsets.py || 24 || 'cod'
2020-12-20 10:46:54,102,102 | Weather | ERROR | ----------------------------------------------------------------------------------------------------
2020-12-20 10:46:54,103,103 | Weather | ERROR | weather api utils : <class 'KeyError'> || utils.py || 27 || 'cod'
2020-12-20 10:46:54,103,103 | Weather | ERROR | ----------------------------------------------------------------------------------------------------
2020-12-20 10:46:54,103,103 | Weather | ERROR | weather api : <class 'KeyError'> || viewsets.py || 24 || 'cod'
2020-12-20 13:48:26,283,283 | Weather | ERROR | ----------------------------------------------------------------------------------------------------
2020-12-20 13:48:26,284,284 | Weather | ERROR | task retrieve: <class 'TypeError'> || views.py || 25 || object of type 'Response' has no len()
2020-12-20 14:03:40,574,574 | Weather | ERROR | ----------------------------------------------------------------------------------------------------
2020-12-20 14:03:40,574,574 | Weather | ERROR | task create: <class 'rest_framework.exceptions.ValidationError'> || views.py || 23 || {'uuid': [ErrorDetail(string='Must be a valid UUID.', code='invalid')]}
2020-12-20 14:17:48,172,172 | Weather | ERROR | ----------------------------------------------------------------------------------------------------
2020-12-20 14:17:48,177,177 | Weather | ERROR | task update: <class 'rest_framework.exceptions.ValidationError'> || views.py || 43 || {'title': [ErrorDetail(string='This field is required.', code='required')], 'uuid': [ErrorDetail(string='This field is required.', code='required')]}
2020-12-20 17:26:40,167,167 | Weather | ERROR | ----------------------------------------------------------------------------------------------------
2020-12-20 17:26:40,168,168 | Weather | ERROR | weather api utils : <class 'KeyError'> || utils.py || 34 || 'list'
2020-12-20 17:26:40,168,168 | Weather | ERROR | ----------------------------------------------------------------------------------------------------
2020-12-20 17:26:40,168,168 | Weather | ERROR | weather_api : <class 'KeyError'> || commmon_utils.py || 64 || 'list'
2020-12-20 17:45:25,540,540 | Weather | ERROR | ----------------------------------------------------------------------------------------------------
2020-12-20 17:45:25,540,540 | Weather | ERROR | retrieve_list : <class 'django.http.response.Http404'> || commmon_utils.py || 54 || 
2020-12-20 17:46:12,072,72 | Weather | ERROR | ----------------------------------------------------------------------------------------------------
2020-12-20 17:46:12,073,73 | Weather | ERROR | retrieve_list : <class 'django.http.response.Http404'> || commmon_utils.py || 54 || 
